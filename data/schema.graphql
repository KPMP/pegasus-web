type Query {
  genes(symbol: String): [MyGeneInfoHit]
  autocomplete(searchTerm: String): [AutoCompleteResult]
  cellTypeHierarchy: CellTypeHierarchy
  geneExpressionSummary(
    dataType: String
    geneSymbol: String
    cellType: String
    tissueType: String
  ): [GeneExpressionSummary]
  getClusterHieararchies(cellType: String!): [ClusterHierarchy]
  getUmapPlotData(
    dataType: String!
    geneSymbol: String!
    tissueType: String
  ): PlotData
}

type MyGeneInfoHit {
  id: ID
  symbol: String
  name: String
  entrezgene: String
  alias: [String]
}

type AutoCompleteResult {
  value: String
  name: String
  type: String
  id: ID
  aliases: [String]
}

type CellTypeHierarchy {
  cellTypeRegions: [CellTypeStructureRegion]
}

type CellTypeStructureRegion {
  cellTypeSubregions: [CellTypeStructureSubregion]
  regionName: String
}

type CellTypeStructureSubregion {
  cellTypes: [CellType]
  subregionName: String
}

type CellType {
  cellType: String
}

type GeneExpressionSummary {
  id: ID
  tissueType: String
  gene: String
  pVal: Float
  pValAdj: Float
  foldChange: Float
  pct1: Float
  pct2: Float
  avgExp: Float
  cluster: String
  clusterName: String
  dataType: String
  cellCount: Int
}

type ClusterHierarchy {
  cellType: String
  cellTypeId: Int
  structureRegion: String
  structureSubregion: String
  clusterId: Int
  clusterName: String
  isSingleNucCluster: String
  isSingleCellCluster: String
  isRegionalTranscriptomics: String
  cellTypeOrder: Float
}

type PlotData {
  referenceData: [ReferenceCluster]
  featureData: [FeatureData]
}

type FeatureData {
  xValues: [Float]
  yValues: [Float]
  expression: [Float]
}

type ReferenceCluster {
  xValues: [Float]
  yValues: [Float]
  color: String
  clusterName: String
}
